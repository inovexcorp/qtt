# Redis Cache Configuration
# Configuration for Redis-backed query result caching

# Redis Connection Settings
# Enable/disable Redis caching globally (if false, queries bypass cache)
redis.enabled=$[env:REDIS_ENABLED;default=false]

# Redis server hostname
redis.host=$[env:REDIS_HOST;default=localhost]

# Redis server port
redis.port=$[env:REDIS_PORT;default=6379]

# Redis authentication password (leave empty if no auth required)
redis.password=$[env:REDIS_PASSWORD;default=]

# Redis database number (0-15)
redis.database=$[env:REDIS_DATABASE;default=0]

# Redis connection timeout in milliseconds
redis.timeout=$[env:REDIS_TIMEOUT;default=5000]

# Redis Connection Pool Settings
# Maximum number of connections in pool
redis.pool.maxTotal=$[env:REDIS_POOL_MAX_TOTAL;default=20]

# Maximum number of idle connections in pool
redis.pool.maxIdle=$[env:REDIS_POOL_MAX_IDLE;default=10]

# Minimum number of idle connections in pool
redis.pool.minIdle=$[env:REDIS_POOL_MIN_IDLE;default=5]

# Global Cache Settings
# Prefix for all cache keys (helps with multi-tenant or namespacing)
cache.keyPrefix=$[env:CACHE_KEY_PREFIX;default=qtt:cache:]

# Default cache TTL in seconds (used when route doesn't specify a TTL)
cache.defaultTtlSeconds=$[env:CACHE_DEFAULT_TTL;default=3600]

# Enable gzip compression for cached values (saves memory, adds CPU overhead)
cache.compressionEnabled=$[env:CACHE_COMPRESSION_ENABLED;default=true]

# Cache Behavior
# Continue on cache errors (true) vs fail and return error to client (false)
cache.failOpen=$[env:CACHE_FAIL_OPEN;default=true]

# Track cache statistics (hit/miss counts, memory usage)
cache.statsEnabled=$[env:CACHE_STATS_ENABLED;default=true]

# Cache statistics TTL in seconds (prevents Redis stampedes on stats endpoint)
cache.statsTtlSeconds=$[env:CACHE_STATS_TTL;default=5]
